Platforma core application pt deservirea altor aplicatii pt smart cities.

	<!-- AWS Elastic Beanstalk -->
	<!-- Maybe migrate UI to React or Angular decouple backend from frontend microservices -->
	<!-- Zuul - gateway: expose all endpoints as beying one single endpoint -->

	<!-- Statistici pe zone, cate mijloace de transport sunt disponibile in ce zona -->

	<!-- Exemple de aplicatii la sustinerea lucrarii -->
	    <!-- Plecare din punctul A in punctul B - mijloace de transport -->
	    <!-- Sunt in zona cutare, ce mijloace de transport sunt disponibile in zona -->
	    <!-- Zone din oras, densitate mijloace de transport -->
	    <!-- Care cartier este cel mai bine deservit de mijloacele de transport -->

    <!-- Motivation for application is that there is a lot of real time data and NoSQL app will solve it -->
	    <!-- Motivation, there is nothing similar, would be useful for all -->
	    <!-- Motivation: geolocation standard rest api exposure geoJSON -->

	    <!-- Smart application ecosystem, comunicare standardizata pt diferite aplicatii, geo JSON -->
        <!-- scalabilitatea justifica nosql -->
        <!-- RATT public API -->

	<!-- Update https://elearning.e-uvt.ro/mod/assign/view.php?id=381031 (Final title, keywords and abstract) -->

	5   Deployment of the application(CI/CD) cloud agnostic
	Maven Modules for dependencies

	Concluzii - performanta, deploy usor, etc

	Raul:
	Abstract chapter needs reformatting, ca la Sorin
	Indexare pe verticala, nu pe orizontala.
	Nu se pierde timp la serializari, deserializari


	TODO

    1. Concatenate what and why with motivation. DONE
    2. Chapter architecture of the application: DONE
        - Add graphical things to architecture chapter.; DONE
        - Describe each service from the architectural image; DONE
        - Remove Spring boot subchapter. DONE

    3. Technologies: DONE
        - Add Spring Boot to Java Stack Technologies DONE

    4. Chapter "Deployment of the application(CI/CD)" should be renamed to "Build pipeline" DONE
        - Pasul de deployment o sa fie descris de Raul si voi descrie partea de build si integration. DONE
        - Build pipeline ...staging build Maven, etc. DONE

    5. Chapter GeoJSON framework API use case and future work: DONE
        - rename to Demo aplication; DONE
        - move future work to conclussions. DONE

    No screenshots with coding. Add as code not image.

    localhost:8080/addVehicle/{id} Link to get E2 -> r1551


    To deply the application:
    1 - mvn clean install
    2 - docker-compose.exe -f C:\[Path to docker compose file]]\docker-compose.yml up -d --build
